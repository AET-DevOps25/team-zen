---
- name: Setup and Deploy Application
  hosts: docker_server
  become: true
  vars:
    github_actor: "{{ github_actor | default('') }}"
    github_token: "{{ github_token | default('') }}"
  tasks:
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true

    - name: Check if Docker is already installed
      ansible.builtin.command: docker --version
      register: docker_check
      failed_when: false
      changed_when: false

    - name: Install Docker and dependencies
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-compose-v2
          - python3-docker
        state: present
        update_cache: true

    - name: Start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Add ubuntu user to docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: true

    - name: Reset connection to apply group changes
      ansible.builtin.meta: reset_connection

    - name: Test Docker access and install if needed
      block:
        - name: Test Docker access as ubuntu user
          ansible.builtin.command: docker ps
          become_user: ubuntu
          register: docker_test
          
      rescue:
        - name: Debug Docker issue
          ansible.builtin.debug:
            msg: "Docker access failed, attempting to fix..."
            
        - name: Ensure Docker daemon is running
          ansible.builtin.systemd:
            name: docker
            state: restarted
            
        - name: Wait for Docker daemon
          ansible.builtin.pause:
            seconds: 5
            
        - name: Retry Docker access
          ansible.builtin.command: docker ps
          become_user: ubuntu

    - name: Copy project files
      ansible.builtin.copy:
        src: ../
        dest: /home/ubuntu/app/
        owner: ubuntu
        group: ubuntu
        mode: preserve

    - name: Ensure .env file exists
      ansible.builtin.stat:
        path: /home/ubuntu/app/.env
      register: env_file

    - name: Create basic .env if missing
      ansible.builtin.copy:
        content: |
          # Basic environment file created by Ansible
          NODE_ENV=production
        dest: /home/ubuntu/app/.env
        owner: ubuntu
        group: ubuntu
        mode: '0644'
      when: not env_file.stat.exists

    - name: Deploy with Docker Compose
      block:
        - name: Deploy application with Docker Compose
          community.docker.docker_compose_v2:
            project_src: /home/ubuntu/app
            state: present
            recreate: always
            remove_orphans: true
          become_user: ubuntu
          
      rescue:
        - name: Install missing Ansible Docker collection
          ansible.builtin.command: ansible-galaxy collection install community.docker
          delegate_to: localhost
          
        - name: Retry Docker Compose deployment
          community.docker.docker_compose_v2:
            project_src: /home/ubuntu/app
            state: present
            recreate: always
            remove_orphans: true
          become_user: ubuntu

    - name: Show deployment info
      ansible.builtin.debug:
        msg:
          - "üöÄ Deployment complete!"
          - "üåê App: http://{{ ansible_host }}:3000"
          - "‚ö° API: http://{{ ansible_host }}:8085"
