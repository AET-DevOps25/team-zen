---
- name: Deploy Team Zen Application
  hosts: docker_server
  become: true
  vars:
    github_actor: "{{ github_actor | default('') }}"
    github_token: "{{ github_token | default('') }}"
    genai_api_key: "{{ genai_api_key | default('') }}"
    grafana_password: "{{ grafana_password | default('admin123') }}"
    clerk_publishable_key: "{{ clerk_publishable_key | default('') }}"
    clerk_secret_key: "{{ clerk_secret_key | default('') }}"
    clerk_webhook_secret: "{{ clerk_webhook_secret | default('') }}"

  tasks:
    - name: Remove old Docker packages
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
          - runc
        state: absent
        purge: true
      ignore_errors: true

    - name: Update package cache and install prerequisites
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: true

    - name: Create keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: true

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Update package cache after adding Docker repository
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      register: docker_version
      changed_when: false

    - name: Verify Docker Compose installation
      ansible.builtin.command: docker compose version
      register: docker_compose_version
      changed_when: false

    - name: Display Docker versions
      ansible.builtin.debug:
        msg:
          - "Docker version: {{ docker_version.stdout }}"
          - "Docker Compose version: {{ docker_compose_version.stdout }}"

    - name: Start Docker and add user to docker group
      block:
        - name: Start Docker service
          ansible.builtin.systemd:
            name: docker
            state: started
            enabled: true

        - name: Add ubuntu user to docker group
          ansible.builtin.user:
            name: ubuntu
            groups: docker
            append: true

        - name: Reset SSH connection to allow group changes to take effect
          ansible.builtin.meta: reset_connection

    - name: Create app directory and files
      block:
        - name: Create app directory
          ansible.builtin.file:
            path: /home/ubuntu/app
            state: directory
            owner: ubuntu
            group: ubuntu
            mode: '0755'

        - name: Copy docker-compose file
          ansible.builtin.copy:
            src: ../docker-compose.prod.yml
            dest: /home/ubuntu/app/docker-compose.yml
            owner: ubuntu
            group: ubuntu
            mode: '0644'

        - name: Create environment file
          ansible.builtin.copy:
            content: |
              NODE_ENV=production
              API_URL=http://{{ ansible_host }}:8085
              VITE_API_URL=http://{{ ansible_host }}:8085
              VITE_CLERK_PUBLISHABLE_KEY={{ clerk_publishable_key }}
              CLERK_SECRET_KEY={{ clerk_secret_key }}
              CLERK_WEBHOOK_SECRET={{ clerk_webhook_secret }}
              CLERK_AUTHORIZED_PARTY=http://{{ ansible_host }}:3000
              MONGO_DB_URI_USER=mongodb://user-db:27017/userdb
              MONGO_DB_URI_JOURNAL=mongodb://journal-db:27017/journaldb
              GENAI_API_URL=https://gpu.aet.cit.tum.de/api/chat/completions
              GENAI_API_KEY={{ genai_api_key }}
              GF_SECURITY_ADMIN_PASSWORD={{ grafana_password }}
            dest: /home/ubuntu/app/.env
            owner: ubuntu
            group: ubuntu
            mode: '0644'

    - name: Login to GitHub Container Registry
      ansible.builtin.shell: |
        set -o pipefail
        echo "{{ github_token }}" | docker login ghcr.io -u "{{ github_actor }}" --password-stdin
      become: true
      become_user: ubuntu
      when: github_actor != '' and github_token != ''
      no_log: true
      changed_when: true

    - name: Deploy application
      ansible.builtin.shell: |
        cd /home/ubuntu/app
        docker compose pull
        docker compose up -d --remove-orphans
      become: true
      become_user: ubuntu
      changed_when: true

    - name: Show deployment info
      ansible.builtin.debug:
        msg:
          - "üöÄ Deployment complete!"
          - "üåê App: http://{{ ansible_host }}:3000"
          - "‚ö° API: http://{{ ansible_host }}:8085"
          - "üìä Grafana: http://{{ ansible_host }}:3001"
          - "üìà Prometheus: http://{{ ansible_host }}:9090"
