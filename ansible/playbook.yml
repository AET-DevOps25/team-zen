---
- name: Install Docker, Docker-compose
  hosts: docker_server
  become: true
  tasks:
    - name: Install Docker
      ansible.builtin.yum:
        name: docker
        update_cache: true
        state: present
    - name: Install docker-compose
      ansible.builtin.get_url:
        url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-{{ lookup('pipe', 'uname -m') }}
        dest: /usr/local/bin/docker-compose
        mode: +x
    - name: Start docker daemon
      ansible.builtin.systemd:
        name: docker
        state: started
    - name: Install docker python module
      ansible.builtin.pip:
        name:
          - docker
          - docker-compose

- name: Add ubuntu user to docker group
  hosts: docker_server
  become: true
  tasks:
    - name: Add ubuntu to docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: true
    - name: Reconnect to server session
      ansible.builtin.meta: reset_connection

- name: Prepare and start docker containers
  hosts: docker_server
  become: true
  vars:
    ec2_public_ip: "{{ lookup('env', 'EC2_PUBLIC_IP') }}"
  tasks:
    - name: Remove existing .env.prod if exists
      ansible.builtin.file:
        path: /home/ubuntu/.env.prod
        state: absent

    - name: Create .env.prod file with environment variables
      ansible.builtin.copy:
        dest: /home/ubuntu/.env.prod
        content: |
          CLIENT_HOST=client.{{ ec2_public_ip }}.nip.io
          SERVER_HOST=api.{{ ec2_public_ip }}.nip.io
          PUBLIC_API_URL=https://api.{{ ec2_public_ip }}.nip.io
        owner: ubuntu
        group: ubuntu
        mode: "0644"

    - name: Copy docker compose file
      ansible.builtin.copy:
        src: ../docker-compose.yml
        dest: /home/ubuntu/docker-compose.yml
        owner: ubuntu
        group: ubuntu
        mode: "0644"

    - name: Log in to GitHub Container Registry
      community.docker.docker_login:
        registry_url: ghcr.io
        username: "{{ lookup('env', 'GITHUB_ACTOR') }}"
        password: "{{ lookup('env', 'GITHUB_TOKEN') }}"

    - name: Start docker containers with compose
      become: true
      become_user: ubuntu
      community.docker.docker_compose_v2:
        project_src: /home/ubuntu
        files:
          - docker-compose.yml
        env_files:
          - /home/ubuntu/.env.prod
        state: present
        pull: "always"
        recreate: "always"
